
PGSQL_SRC_PATH ?= 
PGSQL_INCLUDE_PATH ?= $(PGSQL_SRC_PATH)/src/include
PGSQL_LIBRARY_PATH ?= $(PGSQL_SRC_PATH)/contrib/pgcrypto
export PGSQL_SRC_PATH
export PGSQL_INCLUDE_PATH
export PGSQL_LIBRARY_PATH

BINARY = data_encryption.so
OBJS = data_encryption.o

CC = /usr/bin/gcc
ifeq ($(debug),yes)
  CFLAGS = -c -Wall -O0 -ggdb $(DEBUG) -fPIC
else
  CFLAGS = -c -Wall -ggdb -O3 -fPIC
endif

LFLAGS = -L$(PGSQL_LIBRARY_PATH)
LINKER = -lpgcrypto -Wl,-rpath,'$(PGSQL_LIBRARY_PATH)'
IFLAGS = -I$(PGSQL_INCLUDE_PATH) -I$(PGSQL_LIBRARY_PATH)

all: $(BINARY)

$(BINARY): $(OBJS)
	$(CC) -shared -o $(BINARY) $(OBJS) $(LFLAGS) $(LINKER)

# remove unnecessary info from binary #
ifneq ($(debug),yes)
	objcopy --only-keep-debug data_encryption.so data_encryption.debug
	strip --strip-debug data_encryption.so
	strip --strip-unneeded data_encryption.so
endif
######################################## 

%.o: %.c
	$(CC) $(CFLAGS) $(IFLAGS) $<

clean: 
	rm -f $(BINARY) $(OBJS) *debug*
